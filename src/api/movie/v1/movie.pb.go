// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: movie/v1/movie.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messages for CreateMovie
type CreateMovieRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Genre         string                 `protobuf:"bytes,2,opt,name=genre,proto3" json:"genre,omitempty"`
	ReleaseDate   string                 `protobuf:"bytes,3,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"` // YYYY-MM-DD format
	Distributor   *string                `protobuf:"bytes,4,opt,name=distributor,proto3,oneof" json:"distributor,omitempty"`
	Budget        *int64                 `protobuf:"varint,5,opt,name=budget,proto3,oneof" json:"budget,omitempty"`
	MpaRating     *string                `protobuf:"bytes,6,opt,name=mpa_rating,json=mpaRating,proto3,oneof" json:"mpa_rating,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMovieRequest) Reset() {
	*x = CreateMovieRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieRequest) ProtoMessage() {}

func (x *CreateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieRequest.ProtoReflect.Descriptor instead.
func (*CreateMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMovieRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMovieRequest) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *CreateMovieRequest) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *CreateMovieRequest) GetDistributor() string {
	if x != nil && x.Distributor != nil {
		return *x.Distributor
	}
	return ""
}

func (x *CreateMovieRequest) GetBudget() int64 {
	if x != nil && x.Budget != nil {
		return *x.Budget
	}
	return 0
}

func (x *CreateMovieRequest) GetMpaRating() string {
	if x != nil && x.MpaRating != nil {
		return *x.MpaRating
	}
	return ""
}

type CreateMovieReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ReleaseDate   string                 `protobuf:"bytes,3,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Genre         string                 `protobuf:"bytes,4,opt,name=genre,proto3" json:"genre,omitempty"`
	Distributor   *string                `protobuf:"bytes,5,opt,name=distributor,proto3,oneof" json:"distributor,omitempty"`
	Budget        *int64                 `protobuf:"varint,6,opt,name=budget,proto3,oneof" json:"budget,omitempty"`
	MpaRating     *string                `protobuf:"bytes,7,opt,name=mpa_rating,json=mpaRating,proto3,oneof" json:"mpa_rating,omitempty"`
	BoxOffice     *BoxOffice             `protobuf:"bytes,8,opt,name=box_office,json=boxOffice,proto3,oneof" json:"box_office,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMovieReply) Reset() {
	*x = CreateMovieReply{}
	mi := &file_movie_v1_movie_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMovieReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieReply) ProtoMessage() {}

func (x *CreateMovieReply) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieReply.ProtoReflect.Descriptor instead.
func (*CreateMovieReply) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMovieReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateMovieReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMovieReply) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *CreateMovieReply) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *CreateMovieReply) GetDistributor() string {
	if x != nil && x.Distributor != nil {
		return *x.Distributor
	}
	return ""
}

func (x *CreateMovieReply) GetBudget() int64 {
	if x != nil && x.Budget != nil {
		return *x.Budget
	}
	return 0
}

func (x *CreateMovieReply) GetMpaRating() string {
	if x != nil && x.MpaRating != nil {
		return *x.MpaRating
	}
	return ""
}

func (x *CreateMovieReply) GetBoxOffice() *BoxOffice {
	if x != nil {
		return x.BoxOffice
	}
	return nil
}

type BoxOffice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Revenue       *Revenue               `protobuf:"bytes,1,opt,name=revenue,proto3" json:"revenue,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	LastUpdated   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoxOffice) Reset() {
	*x = BoxOffice{}
	mi := &file_movie_v1_movie_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoxOffice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxOffice) ProtoMessage() {}

func (x *BoxOffice) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxOffice.ProtoReflect.Descriptor instead.
func (*BoxOffice) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{2}
}

func (x *BoxOffice) GetRevenue() *Revenue {
	if x != nil {
		return x.Revenue
	}
	return nil
}

func (x *BoxOffice) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BoxOffice) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *BoxOffice) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

type Revenue struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Worldwide         int64                  `protobuf:"varint,1,opt,name=worldwide,proto3" json:"worldwide,omitempty"`
	OpeningWeekendUsa *int64                 `protobuf:"varint,2,opt,name=opening_weekend_usa,json=openingWeekendUsa,proto3,oneof" json:"opening_weekend_usa,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Revenue) Reset() {
	*x = Revenue{}
	mi := &file_movie_v1_movie_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Revenue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Revenue) ProtoMessage() {}

func (x *Revenue) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Revenue.ProtoReflect.Descriptor instead.
func (*Revenue) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{3}
}

func (x *Revenue) GetWorldwide() int64 {
	if x != nil {
		return x.Worldwide
	}
	return 0
}

func (x *Revenue) GetOpeningWeekendUsa() int64 {
	if x != nil && x.OpeningWeekendUsa != nil {
		return *x.OpeningWeekendUsa
	}
	return 0
}

// Messages for ListMovies
type ListMoviesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Q             *string                `protobuf:"bytes,1,opt,name=q,proto3,oneof" json:"q,omitempty"`
	Year          *int32                 `protobuf:"varint,2,opt,name=year,proto3,oneof" json:"year,omitempty"`
	Genre         *string                `protobuf:"bytes,3,opt,name=genre,proto3,oneof" json:"genre,omitempty"`
	Distributor   *string                `protobuf:"bytes,4,opt,name=distributor,proto3,oneof" json:"distributor,omitempty"`
	Budget        *int64                 `protobuf:"varint,5,opt,name=budget,proto3,oneof" json:"budget,omitempty"`
	MpaRating     *string                `protobuf:"bytes,6,opt,name=mpa_rating,json=mpaRating,proto3,oneof" json:"mpa_rating,omitempty"`
	Limit         *int32                 `protobuf:"varint,7,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Cursor        *string                `protobuf:"bytes,8,opt,name=cursor,proto3,oneof" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMoviesRequest) Reset() {
	*x = ListMoviesRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMoviesRequest) ProtoMessage() {}

func (x *ListMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMoviesRequest.ProtoReflect.Descriptor instead.
func (*ListMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{4}
}

func (x *ListMoviesRequest) GetQ() string {
	if x != nil && x.Q != nil {
		return *x.Q
	}
	return ""
}

func (x *ListMoviesRequest) GetYear() int32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *ListMoviesRequest) GetGenre() string {
	if x != nil && x.Genre != nil {
		return *x.Genre
	}
	return ""
}

func (x *ListMoviesRequest) GetDistributor() string {
	if x != nil && x.Distributor != nil {
		return *x.Distributor
	}
	return ""
}

func (x *ListMoviesRequest) GetBudget() int64 {
	if x != nil && x.Budget != nil {
		return *x.Budget
	}
	return 0
}

func (x *ListMoviesRequest) GetMpaRating() string {
	if x != nil && x.MpaRating != nil {
		return *x.MpaRating
	}
	return ""
}

func (x *ListMoviesRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListMoviesRequest) GetCursor() string {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return ""
}

type ListMoviesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*MovieItem           `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextCursor    *string                `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3,oneof" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMoviesReply) Reset() {
	*x = ListMoviesReply{}
	mi := &file_movie_v1_movie_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMoviesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMoviesReply) ProtoMessage() {}

func (x *ListMoviesReply) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMoviesReply.ProtoReflect.Descriptor instead.
func (*ListMoviesReply) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{5}
}

func (x *ListMoviesReply) GetItems() []*MovieItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListMoviesReply) GetNextCursor() string {
	if x != nil && x.NextCursor != nil {
		return *x.NextCursor
	}
	return ""
}

type MovieItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ReleaseDate   string                 `protobuf:"bytes,3,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Genre         string                 `protobuf:"bytes,4,opt,name=genre,proto3" json:"genre,omitempty"`
	Distributor   *string                `protobuf:"bytes,5,opt,name=distributor,proto3,oneof" json:"distributor,omitempty"`
	Budget        *int64                 `protobuf:"varint,6,opt,name=budget,proto3,oneof" json:"budget,omitempty"`
	MpaRating     *string                `protobuf:"bytes,7,opt,name=mpa_rating,json=mpaRating,proto3,oneof" json:"mpa_rating,omitempty"`
	BoxOffice     *BoxOffice             `protobuf:"bytes,8,opt,name=box_office,json=boxOffice,proto3,oneof" json:"box_office,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MovieItem) Reset() {
	*x = MovieItem{}
	mi := &file_movie_v1_movie_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovieItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieItem) ProtoMessage() {}

func (x *MovieItem) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieItem.ProtoReflect.Descriptor instead.
func (*MovieItem) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{6}
}

func (x *MovieItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MovieItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieItem) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *MovieItem) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *MovieItem) GetDistributor() string {
	if x != nil && x.Distributor != nil {
		return *x.Distributor
	}
	return ""
}

func (x *MovieItem) GetBudget() int64 {
	if x != nil && x.Budget != nil {
		return *x.Budget
	}
	return 0
}

func (x *MovieItem) GetMpaRating() string {
	if x != nil && x.MpaRating != nil {
		return *x.MpaRating
	}
	return ""
}

func (x *MovieItem) GetBoxOffice() *BoxOffice {
	if x != nil {
		return x.BoxOffice
	}
	return nil
}

// Messages for SubmitRating
type SubmitRatingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`     // from path
	Rating        float64                `protobuf:"fixed64,2,opt,name=rating,proto3" json:"rating,omitempty"` // from body
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitRatingRequest) Reset() {
	*x = SubmitRatingRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRatingRequest) ProtoMessage() {}

func (x *SubmitRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRatingRequest.ProtoReflect.Descriptor instead.
func (*SubmitRatingRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitRatingRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubmitRatingRequest) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type SubmitRatingReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MovieTitle    string                 `protobuf:"bytes,1,opt,name=movie_title,json=movieTitle,proto3" json:"movie_title,omitempty"`
	RaterId       string                 `protobuf:"bytes,2,opt,name=rater_id,json=raterId,proto3" json:"rater_id,omitempty"`
	Rating        float64                `protobuf:"fixed64,3,opt,name=rating,proto3" json:"rating,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitRatingReply) Reset() {
	*x = SubmitRatingReply{}
	mi := &file_movie_v1_movie_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitRatingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitRatingReply) ProtoMessage() {}

func (x *SubmitRatingReply) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitRatingReply.ProtoReflect.Descriptor instead.
func (*SubmitRatingReply) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{8}
}

func (x *SubmitRatingReply) GetMovieTitle() string {
	if x != nil {
		return x.MovieTitle
	}
	return ""
}

func (x *SubmitRatingReply) GetRaterId() string {
	if x != nil {
		return x.RaterId
	}
	return ""
}

func (x *SubmitRatingReply) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

// Messages for GetRating
type GetRatingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRatingRequest) Reset() {
	*x = GetRatingRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRatingRequest) ProtoMessage() {}

func (x *GetRatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRatingRequest.ProtoReflect.Descriptor instead.
func (*GetRatingRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{9}
}

func (x *GetRatingRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetRatingReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Average       float64                `protobuf:"fixed64,1,opt,name=average,proto3" json:"average,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRatingReply) Reset() {
	*x = GetRatingReply{}
	mi := &file_movie_v1_movie_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRatingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRatingReply) ProtoMessage() {}

func (x *GetRatingReply) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRatingReply.ProtoReflect.Descriptor instead.
func (*GetRatingReply) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{10}
}

func (x *GetRatingReply) GetAverage() float64 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *GetRatingReply) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Messages for HealthCheck
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_movie_v1_movie_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{11}
}

type HealthCheckReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckReply) Reset() {
	*x = HealthCheckReply{}
	mi := &file_movie_v1_movie_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckReply) ProtoMessage() {}

func (x *HealthCheckReply) ProtoReflect() protoreflect.Message {
	mi := &file_movie_v1_movie_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckReply.ProtoReflect.Descriptor instead.
func (*HealthCheckReply) Descriptor() ([]byte, []int) {
	return file_movie_v1_movie_proto_rawDescGZIP(), []int{12}
}

func (x *HealthCheckReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_movie_v1_movie_proto protoreflect.FileDescriptor

const file_movie_v1_movie_proto_rawDesc = "" +
	"\n" +
	"\x14movie/v1/movie.proto\x12\fapi.movie.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf5\x01\n" +
	"\x12CreateMovieRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x14\n" +
	"\x05genre\x18\x02 \x01(\tR\x05genre\x12!\n" +
	"\frelease_date\x18\x03 \x01(\tR\vreleaseDate\x12%\n" +
	"\vdistributor\x18\x04 \x01(\tH\x00R\vdistributor\x88\x01\x01\x12\x1b\n" +
	"\x06budget\x18\x05 \x01(\x03H\x01R\x06budget\x88\x01\x01\x12\"\n" +
	"\n" +
	"mpa_rating\x18\x06 \x01(\tH\x02R\tmpaRating\x88\x01\x01B\x0e\n" +
	"\f_distributorB\t\n" +
	"\a_budgetB\r\n" +
	"\v_mpa_rating\"\xcf\x02\n" +
	"\x10CreateMovieReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12!\n" +
	"\frelease_date\x18\x03 \x01(\tR\vreleaseDate\x12\x14\n" +
	"\x05genre\x18\x04 \x01(\tR\x05genre\x12%\n" +
	"\vdistributor\x18\x05 \x01(\tH\x00R\vdistributor\x88\x01\x01\x12\x1b\n" +
	"\x06budget\x18\x06 \x01(\x03H\x01R\x06budget\x88\x01\x01\x12\"\n" +
	"\n" +
	"mpa_rating\x18\a \x01(\tH\x02R\tmpaRating\x88\x01\x01\x12;\n" +
	"\n" +
	"box_office\x18\b \x01(\v2\x17.api.movie.v1.BoxOfficeH\x03R\tboxOffice\x88\x01\x01B\x0e\n" +
	"\f_distributorB\t\n" +
	"\a_budgetB\r\n" +
	"\v_mpa_ratingB\r\n" +
	"\v_box_office\"\xaf\x01\n" +
	"\tBoxOffice\x12/\n" +
	"\arevenue\x18\x01 \x01(\v2\x15.api.movie.v1.RevenueR\arevenue\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12=\n" +
	"\flast_updated\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"t\n" +
	"\aRevenue\x12\x1c\n" +
	"\tworldwide\x18\x01 \x01(\x03R\tworldwide\x123\n" +
	"\x13opening_weekend_usa\x18\x02 \x01(\x03H\x00R\x11openingWeekendUsa\x88\x01\x01B\x16\n" +
	"\x14_opening_weekend_usa\"\xd2\x02\n" +
	"\x11ListMoviesRequest\x12\x11\n" +
	"\x01q\x18\x01 \x01(\tH\x00R\x01q\x88\x01\x01\x12\x17\n" +
	"\x04year\x18\x02 \x01(\x05H\x01R\x04year\x88\x01\x01\x12\x19\n" +
	"\x05genre\x18\x03 \x01(\tH\x02R\x05genre\x88\x01\x01\x12%\n" +
	"\vdistributor\x18\x04 \x01(\tH\x03R\vdistributor\x88\x01\x01\x12\x1b\n" +
	"\x06budget\x18\x05 \x01(\x03H\x04R\x06budget\x88\x01\x01\x12\"\n" +
	"\n" +
	"mpa_rating\x18\x06 \x01(\tH\x05R\tmpaRating\x88\x01\x01\x12\x19\n" +
	"\x05limit\x18\a \x01(\x05H\x06R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06cursor\x18\b \x01(\tH\aR\x06cursor\x88\x01\x01B\x04\n" +
	"\x02_qB\a\n" +
	"\x05_yearB\b\n" +
	"\x06_genreB\x0e\n" +
	"\f_distributorB\t\n" +
	"\a_budgetB\r\n" +
	"\v_mpa_ratingB\b\n" +
	"\x06_limitB\t\n" +
	"\a_cursor\"v\n" +
	"\x0fListMoviesReply\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.api.movie.v1.MovieItemR\x05items\x12$\n" +
	"\vnext_cursor\x18\x02 \x01(\tH\x00R\n" +
	"nextCursor\x88\x01\x01B\x0e\n" +
	"\f_next_cursor\"\xc8\x02\n" +
	"\tMovieItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12!\n" +
	"\frelease_date\x18\x03 \x01(\tR\vreleaseDate\x12\x14\n" +
	"\x05genre\x18\x04 \x01(\tR\x05genre\x12%\n" +
	"\vdistributor\x18\x05 \x01(\tH\x00R\vdistributor\x88\x01\x01\x12\x1b\n" +
	"\x06budget\x18\x06 \x01(\x03H\x01R\x06budget\x88\x01\x01\x12\"\n" +
	"\n" +
	"mpa_rating\x18\a \x01(\tH\x02R\tmpaRating\x88\x01\x01\x12;\n" +
	"\n" +
	"box_office\x18\b \x01(\v2\x17.api.movie.v1.BoxOfficeH\x03R\tboxOffice\x88\x01\x01B\x0e\n" +
	"\f_distributorB\t\n" +
	"\a_budgetB\r\n" +
	"\v_mpa_ratingB\r\n" +
	"\v_box_office\"C\n" +
	"\x13SubmitRatingRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x16\n" +
	"\x06rating\x18\x02 \x01(\x01R\x06rating\"g\n" +
	"\x11SubmitRatingReply\x12\x1f\n" +
	"\vmovie_title\x18\x01 \x01(\tR\n" +
	"movieTitle\x12\x19\n" +
	"\brater_id\x18\x02 \x01(\tR\araterId\x12\x16\n" +
	"\x06rating\x18\x03 \x01(\x01R\x06rating\"(\n" +
	"\x10GetRatingRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\"@\n" +
	"\x0eGetRatingReply\x12\x18\n" +
	"\aaverage\x18\x01 \x01(\x01R\aaverage\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"\x14\n" +
	"\x12HealthCheckRequest\"*\n" +
	"\x10HealthCheckReply\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\x98\x04\n" +
	"\fMovieService\x12c\n" +
	"\vCreateMovie\x12 .api.movie.v1.CreateMovieRequest\x1a\x1e.api.movie.v1.CreateMovieReply\"\x12\x82\xd3\xe4\x93\x02\f:\x01*\"\a/movies\x12]\n" +
	"\n" +
	"ListMovies\x12\x1f.api.movie.v1.ListMoviesRequest\x1a\x1d.api.movie.v1.ListMoviesReply\"\x0f\x82\xd3\xe4\x93\x02\t\x12\a/movies\x12v\n" +
	"\fSubmitRating\x12!.api.movie.v1.SubmitRatingRequest\x1a\x1f.api.movie.v1.SubmitRatingReply\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/movies/{title}/ratings\x12i\n" +
	"\tGetRating\x12\x1e.api.movie.v1.GetRatingRequest\x1a\x1c.api.movie.v1.GetRatingReply\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/movies/{title}/rating\x12a\n" +
	"\vHealthCheck\x12 .api.movie.v1.HealthCheckRequest\x1a\x1e.api.movie.v1.HealthCheckReply\"\x10\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/healthzB\x1cZ\x1aRobin-Camp/api/movie/v1;v1b\x06proto3"

var (
	file_movie_v1_movie_proto_rawDescOnce sync.Once
	file_movie_v1_movie_proto_rawDescData []byte
)

func file_movie_v1_movie_proto_rawDescGZIP() []byte {
	file_movie_v1_movie_proto_rawDescOnce.Do(func() {
		file_movie_v1_movie_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_movie_v1_movie_proto_rawDesc), len(file_movie_v1_movie_proto_rawDesc)))
	})
	return file_movie_v1_movie_proto_rawDescData
}

var file_movie_v1_movie_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_movie_v1_movie_proto_goTypes = []any{
	(*CreateMovieRequest)(nil),    // 0: api.movie.v1.CreateMovieRequest
	(*CreateMovieReply)(nil),      // 1: api.movie.v1.CreateMovieReply
	(*BoxOffice)(nil),             // 2: api.movie.v1.BoxOffice
	(*Revenue)(nil),               // 3: api.movie.v1.Revenue
	(*ListMoviesRequest)(nil),     // 4: api.movie.v1.ListMoviesRequest
	(*ListMoviesReply)(nil),       // 5: api.movie.v1.ListMoviesReply
	(*MovieItem)(nil),             // 6: api.movie.v1.MovieItem
	(*SubmitRatingRequest)(nil),   // 7: api.movie.v1.SubmitRatingRequest
	(*SubmitRatingReply)(nil),     // 8: api.movie.v1.SubmitRatingReply
	(*GetRatingRequest)(nil),      // 9: api.movie.v1.GetRatingRequest
	(*GetRatingReply)(nil),        // 10: api.movie.v1.GetRatingReply
	(*HealthCheckRequest)(nil),    // 11: api.movie.v1.HealthCheckRequest
	(*HealthCheckReply)(nil),      // 12: api.movie.v1.HealthCheckReply
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_movie_v1_movie_proto_depIdxs = []int32{
	2,  // 0: api.movie.v1.CreateMovieReply.box_office:type_name -> api.movie.v1.BoxOffice
	3,  // 1: api.movie.v1.BoxOffice.revenue:type_name -> api.movie.v1.Revenue
	13, // 2: api.movie.v1.BoxOffice.last_updated:type_name -> google.protobuf.Timestamp
	6,  // 3: api.movie.v1.ListMoviesReply.items:type_name -> api.movie.v1.MovieItem
	2,  // 4: api.movie.v1.MovieItem.box_office:type_name -> api.movie.v1.BoxOffice
	0,  // 5: api.movie.v1.MovieService.CreateMovie:input_type -> api.movie.v1.CreateMovieRequest
	4,  // 6: api.movie.v1.MovieService.ListMovies:input_type -> api.movie.v1.ListMoviesRequest
	7,  // 7: api.movie.v1.MovieService.SubmitRating:input_type -> api.movie.v1.SubmitRatingRequest
	9,  // 8: api.movie.v1.MovieService.GetRating:input_type -> api.movie.v1.GetRatingRequest
	11, // 9: api.movie.v1.MovieService.HealthCheck:input_type -> api.movie.v1.HealthCheckRequest
	1,  // 10: api.movie.v1.MovieService.CreateMovie:output_type -> api.movie.v1.CreateMovieReply
	5,  // 11: api.movie.v1.MovieService.ListMovies:output_type -> api.movie.v1.ListMoviesReply
	8,  // 12: api.movie.v1.MovieService.SubmitRating:output_type -> api.movie.v1.SubmitRatingReply
	10, // 13: api.movie.v1.MovieService.GetRating:output_type -> api.movie.v1.GetRatingReply
	12, // 14: api.movie.v1.MovieService.HealthCheck:output_type -> api.movie.v1.HealthCheckReply
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_movie_v1_movie_proto_init() }
func file_movie_v1_movie_proto_init() {
	if File_movie_v1_movie_proto != nil {
		return
	}
	file_movie_v1_movie_proto_msgTypes[0].OneofWrappers = []any{}
	file_movie_v1_movie_proto_msgTypes[1].OneofWrappers = []any{}
	file_movie_v1_movie_proto_msgTypes[3].OneofWrappers = []any{}
	file_movie_v1_movie_proto_msgTypes[4].OneofWrappers = []any{}
	file_movie_v1_movie_proto_msgTypes[5].OneofWrappers = []any{}
	file_movie_v1_movie_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_movie_v1_movie_proto_rawDesc), len(file_movie_v1_movie_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_movie_v1_movie_proto_goTypes,
		DependencyIndexes: file_movie_v1_movie_proto_depIdxs,
		MessageInfos:      file_movie_v1_movie_proto_msgTypes,
	}.Build()
	File_movie_v1_movie_proto = out.File
	file_movie_v1_movie_proto_goTypes = nil
	file_movie_v1_movie_proto_depIdxs = nil
}
