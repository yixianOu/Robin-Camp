version: '3.8'

services:
  db:
    image: postgres:18-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-moviedb}
      POSTGRES_USER: ${DB_USER:-app}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-app}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-app} -d ${DB_NAME:-moviedb}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:8-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "6379:6379"
    networks:
      - app-network

  app:
    build:
      context: ./src
      dockerfile: Dockerfile
    ports:
      - "${PORT:-8080}:8080"
      - "9000:9000"
    environment:
      PORT: ${PORT:-8080}
      DB_URL: postgres://${DB_USER:-app}:${DB_PASSWORD:-app}@db:5432/${DB_NAME:-moviedb}?sslmode=disable
      REDIS_ADDR: redis:6379
      AUTH_TOKEN: ${AUTH_TOKEN}
      BOXOFFICE_URL: ${BOXOFFICE_URL}
      BOXOFFICE_API_KEY: ${BOXOFFICE_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app-network:
    driver: bridge
